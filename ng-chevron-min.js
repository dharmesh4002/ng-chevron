(function(angular) { 'use strict'; function ChevronController() { this.$onChanges = function (changesObj) { console.log(changesObj); }; this.activeColorVar = this.activeColor == undefined ? 'lightblue' : this.activeColor ; this.inactiveColorVar = this.inactiveColor == undefined ? 'grey' : this.inactiveColor ; this.fontSizeVar = this.fontSize == undefined ? 10 : this.fontSize ; this.fontColorVar = this.fontColor == undefined ? 'white' : this.fontColor ; this.stageHeightVar = this.stageHeight == undefined ? 50 : this.stageHeight ; this.stageWidthVar = this.stageWidth == undefined ? 150 : this.stageWidth ; this.topPadding= (this.stageHeightVar - this.fontSizeVar*1.7)/2; this.boxHeight = this.stageHeightVar - this.topPadding; this.borderSize = this.stageHeightVar/2; this.boxWidth = this.stageWidthVar - this.borderSize*2 ; this.stageMap = {}; if(this.colorMap!=undefined && this.colorMap!=null){ this.stageMap = this.colorMap; } this.animationVar = this.animate != undefined && this.animate? true : false ; this.animationDurationVar = this.animationDuration == undefined ? 2500 : this.animationDuration ; this.transitionDurationVar = this.transitionDuration == undefined ? 1500 : this.transitionDuration ; console.log(this); } angular.module('ngChevron',[]).component('ngChevron', { template : '<div><style>.block{width:{{$ctrl.boxWidth}}px;height:{{$ctrl.boxHeight}}px;background-color:{{$ctrl.inactiveColorVar}};position:relative;color:{{$ctrl.fontColorVar}};font-weight:bold;font-size:{{$ctrl.fontSizeVar}}px;padding-top:{{$ctrl.topPadding}}px;text-align:center;float:left;-moz-box-shadow:6px 6px 5px #CCC;-webkit-box-shadow:6px 6px 5px #CCC;box-shadow:6px 6px 5px #CCC;-webkit-transition:background-color {{$ctrl.transitionDurationVar}}ms linear;-moz-transition:background-color {{$ctrl.transitionDurationVar}}ms linear;-o-transition:background-color {{$ctrl.transitionDurationVar}}ms linear;-ms-transition:background-color {{$ctrl.transitionDurationVar}}ms linear;transition:background-color {{$ctrl.transitionDurationVar}}ms linear}.blockActive{background-color:{{$ctrl.activeColorVar}};-webkit-transition:background-color {{$ctrl.transitionDurationVar}}ms linear;-moz-transition:background-color {{$ctrl.transitionDurationVar}}ms linear;-o-transition:background-color {{$ctrl.transitionDurationVar}}ms linear;-ms-transition:background-color {{$ctrl.transitionDurationVar}}ms linear;transition:background-color {{$ctrl.transitionDurationVar}}ms linear}.arrow-right{width:0;height:0;border-top:{{$ctrl.borderSize}}px solid transparent;border-bottom:{{$ctrl.borderSize}}px solid transparent;position:relative;border-left:{{$ctrl.borderSize}}px solid {{$ctrl.inactiveColorVar}};float:left;-webkit-transition:all {{$ctrl.transitionDurationVar}}ms linear;-moz-transition:all {{$ctrl.transitionDurationVar}}ms linear;-o-transition:all {{$ctrl.transitionDurationVar}}ms linear;-ms-transition:all {{$ctrl.transitionDurationVar}}ms linear;transition:all {{$ctrl.transitionDurationVar}}ms linear}.arrow-right_Active{border-left:{{$ctrl.borderSize}}px solid {{$ctrl.activeColorVar}};-webkit-transition:all {{$ctrl.transitionDurationVar}}ms linear;-moz-transition:all {{$ctrl.transitionDurationVar}}ms linear;-o-transition:all {{$ctrl.transitionDurationVar}}ms linear;-ms-transition:all {{$ctrl.transitionDurationVar}}ms linear;transition:all {{$ctrl.transitionDurationVar}}ms linear}.blocktop{width:0;height:0;border-top:{{$ctrl.borderSize}}px solid {{$ctrl.inactiveColorVar}};border-bottom:{{$ctrl.borderSize}}px solid {{$ctrl.inactiveColorVar}};position:relative;border-left:{{$ctrl.borderSize}}px solid transparent;float:left;-moz-box-shadow:6px 6px 5px #CCC;-webkit-box-shadow:6px 6px 5px #CCC;box-shadow:6px 6px 5px #CCC;-webkit-transition:all {{$ctrl.transitionDurationVar}}ms linear;-moz-transition:all {{$ctrl.transitionDurationVar}}ms linear;-o-transition:all {{$ctrl.transitionDurationVar}}ms linear;-ms-transition:all {{$ctrl.transitionDurationVar}}ms linear;transition:all {{$ctrl.transitionDurationVar}}ms linear}.blocktop_Active{border-top:{{$ctrl.borderSize}}px solid {{$ctrl.activeColorVar}};border-bottom:{{$ctrl.borderSize}}px solid {{$ctrl.activeColorVar}};-webkit-transition:all {{$ctrl.transitionDurationVar}}ms linear;-moz-transition:all {{$ctrl.transitionDurationVar}}ms linear;-o-transition:all {{$ctrl.transitionDurationVar}}ms linear;-ms-transition:all {{$ctrl.transitionDurationVar}}ms linear;transition:all {{$ctrl.transitionDurationVar}}ms linear}.maindiv{float:left;margin-left:-20px}.animate-stage{cursor:pointer;transform-style:preserve-3d;animation:animate-stage{{$ctrl.animationDurationVar}}ms}@keyframes animate-stage{0%{transform:rotateX(0deg)}100%{transform:rotateX(360deg)}}</style><table><tr><td style="width:50px"></td><td><div ng-repeat="item in $ctrl.stageList" class="maindiv {{item == $ctrl.currentStage && $ctrl.animationVar ? \' animate-stage\': \'\'}}"><div class="blocktop {{item == $ctrl.currentStage ? \' blocktop_Active\': \'\'}}" style="border-top-color:{{item == $ctrl.currentStage ? $ctrl.stageMap[item]:\'\';}}; border-bottom-color:{{item == $ctrl.currentStage ?$ctrl.stageMap[item] :\'\'}}"></div><div class="block {{item == $ctrl.currentStage ? \' blockActive\': \'\'}}" style="background-color :{{item == $ctrl.currentStage ?$ctrl.stageMap[item]:\'\'}}">{{item}}</div><div class="arrow-right {{item == $ctrl.currentStage ? \' arrow-right_Active\': \'\'}}" style="border-left-color:{{item == $ctrl.currentStage ?$ctrl.stageMap[item]:\'\'}}"></div></div></td></tr></table></div>', controller: ChevronController, bindings: { activeColor: '@', inactiveColor: '@', stageList: '<', currentStage: '<', fontSize:'=',fontColor:'@', stageHeight:'=',stageWidth:'=',colorMap: '<', animate:'=',animationDuration:'=',transitionDuration:'=' } }); })(window.angular);